<Application x:Class="DevTask.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:DevTask"
             StartupUri="View/MainWindow/MainWindow.xaml">
    <Application.Resources>
        <!--Стиль для заголовка-->
        <Style TargetType="Label" x:Key="HeaderText">
            <Setter Property="FontFamily" Value="Cygre Black"/>
            <Setter Property="Foreground" Value="#E09C3F"/>
        </Style>

        <!--Стиль для обычного текста-->
        <Style TargetType="Label" x:Key="DefaultText">
            <Setter Property="FontFamily" Value="Cygre Medium"/>
            <Setter Property="Foreground" Value="#E09C3F"/>
        </Style>

        <!--Стиль для кастомного ввода с клавиатуры-->
        <Style TargetType="TextBox" x:Key="CustomTextBox">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#E09C3F"/>
            <Setter Property="BorderBrush" Value="#E09C3F"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="Padding" Value="10"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="FontFamily" Value="Cygre Medium"/>
            <Setter Property="FontSize" Value="30"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="10">
                            <ScrollViewer Margin="0" x:Name="PART_ContentHost"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Стиль для блока ввода пароля-->
        <Style TargetType="PasswordBox" x:Key="CustomPasswordBox">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#E09C3F"/>
            <Setter Property="BorderBrush" Value="#E09C3F"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="Padding" Value="10"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="FontFamily" Value="Cygre Medium"/>
            <Setter Property="FontSize" Value="30"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="PasswordBox">
                        <Border Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="10">
                            <ScrollViewer Margin="0" x:Name="PART_ContentHost"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Стиль для выделенной кнопки -->
        <Style x:Key="SelectedButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="#E09C3F"/>
            <Setter Property="Foreground" Value="#0D2746"/>
            <Setter Property="BorderBrush" Value="#E09C3F"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="Padding" Value="10"/>
            <Setter Property="FontFamily" Value="Cygre Medium"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="70">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="border" 
                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" 
                                            To="#e5ac5e" Duration="0:0:0.5"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="border" 
                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" 
                                            To="#E09C3F" Duration="0:0:0.3"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Стиль для не выделенной кнопки -->
        <Style x:Key="UnselectedButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="#0D2746"/>
            <Setter Property="Foreground" Value="#E09C3F"/>
            <Setter Property="BorderBrush" Value="#E09C3F"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="Padding" Value="10"/>
            <Setter Property="FontFamily" Value="Cygre Medium"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="70">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="border" 
                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" 
                                            To="#0e269c" Duration="0:0:0.5"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="border" 
                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" 
                                            To="#0D2746" Duration="0:0:0.3"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Стиль для выделенной кнопки "Назад" -->
        <Style x:Key="BackButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="#E09C3F"/>
            <Setter Property="Foreground" Value="#0D2746"/>
            <Setter Property="BorderBrush" Value="#E09C3F"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="Padding" Value="10"/>
            <Setter Property="FontFamily" Value="Cygre Medium"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="50">
                            <!-- Делаем кнопку полностью круглой -->
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="border" 
                                                    Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" 
                                                    To="#e5ac5e" Duration="0:0:0.5"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="border" 
                                                    Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" 
                                                    To="#E09C3F" Duration="0:0:0.3"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Стиль для кнопки в диалоговом окне -->
        <Style x:Key="DialogButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="#0D2746"/>
            <Setter Property="Foreground" Value="#E09C3F"/>
            <Setter Property="BorderBrush" Value="#E09C3F"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="Padding" Value="10"/>
            <Setter Property="FontFamily" Value="Cygre Medium"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="25">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="border" 
                                                    Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" 
                                                    To="#e5ac5e" Duration="0:0:0.5"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="border" 
                                                    Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" 
                                                    To="#0D2746" Duration="0:0:0.3"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Стиль для боковых кнопок -->
        <Style x:Key="SideButtonStyle" TargetType="Button">
            <Setter Property="Width" Value="78"/>
            <Setter Property="Height" Value="78"/>
            <Setter Property="Background" Value="#D9D9D9"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                            <Ellipse x:Name="ellipse" Fill="{TemplateBinding Background}" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"/>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Content="{TemplateBinding Content}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="MouseEnter">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="ellipse" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" To="#919191" Duration="0:0:1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="MouseLeave">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="ellipse" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" To="#D9D9D9" Duration="0:0:1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Стиль для статусов -->
        <Style x:Key="StatusButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="#E09C3F"/>
            <Setter Property="BorderThickness" Value="3"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Foreground" Value="#E09C3F"/>
            <Setter Property="FontFamily" Value="Inter Medium"/>
            <Setter Property="FontSize" Value="40"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="55">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      TextElement.Foreground="{TemplateBinding Foreground}"
                                      TextElement.FontFamily="{TemplateBinding FontFamily}"
                                      TextElement.FontSize="{TemplateBinding FontSize}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- ComboBoxToggleButton -->
        <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="100"/>
                </Grid.ColumnDefinitions>
                <Border Name="Border"
            Grid.ColumnSpan="2"
            Background="#E09C3F"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            CornerRadius="38" />
                <ContentPresenter
            VerticalAlignment="Center"
            Margin="2,2,23,2"
            Content="{TemplateBinding Content}"
            ContentTemplate="{TemplateBinding ContentTemplate}"
            Name="ContentSite"
            IsHitTestVisible="False" />
                <Grid x:Name="ArrowGrid" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Center" Width="31" Height="27">
                    <Grid.RenderTransform>
                        <RotateTransform x:Name="ArrowRotateTransform" Angle="0" CenterX="15.5" CenterY="13.5" />
                    </Grid.RenderTransform>
                    <Path Data="M18.0981 25.5C16.9434 27.5 14.0566 27.5 12.9019 25.5L1.21058 5.25C0.0558817 3.25 1.49926 0.750001 3.80866 0.750001L27.1913 0.750003C29.5007 0.750003 30.9441 3.25 29.7894 5.25L18.0981 25.5Z" Fill="#D9D9D9" Stretch="Fill"/>
                </Grid>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Duration="0:0:0.2" To="180" Storyboard.TargetProperty="Angle" Storyboard.TargetName="ArrowRotateTransform" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="Angle" Storyboard.TargetName="ArrowRotateTransform" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
                <Trigger Property="UIElement.IsMouseOver" Value="True">
                    <Setter TargetName="Border" Property="Background" Value="#E09C3F" />
                </Trigger>
                <Trigger Property="UIElement.IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="#BE7B1F" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <!-- Шаблон для элементов ComboBox -->
        <DataTemplate x:Key="ComboBoxItemTemplate">
            <TextBlock Text="{Binding}" TextTrimming="CharacterEllipsis">
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Setter Property="Foreground" Value="White" />
                        <Setter Property="FontFamily" Value="Cygre Medium" />
                        <Setter Property="FontSize" Value="40" />
                        <Setter Property="Padding" Value="10,5" />
                        <Setter Property="Background">
                            <Setter.Value>
                                <SolidColorBrush Color="#E09C3F" Opacity="1" />
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="UIElement.IsMouseOver" Value="True">
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <SolidColorBrush Color="Gray" Opacity="0.4" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
        </DataTemplate>

        <!-- Стиль для ComboBox -->
        <Style x:Key="CustomComboBoxStyle" TargetType="ComboBox">
            <Setter Property="Width" Value="310"/>
            <Setter Property="Height" Value="78"/>
            <Setter Property="Background" Value="#E09C3F"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontFamily" Value="Cygre Medium"/>
            <Setter Property="FontSize" Value="40"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="ItemTemplate" Value="{StaticResource ComboBoxItemTemplate}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton Name="ToggleButton"
                                  Height="78"
                                  Template="{StaticResource ComboBoxToggleButton}"
                                  Grid.Column="2"
                                  Focusable="false"
                                  IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                  ClickMode="Press">
                            </ToggleButton>
                            <ContentPresenter Name="ContentSite"
                                      IsHitTestVisible="False"
                                      Content="{TemplateBinding SelectionBoxItem}"
                                      ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                      ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                      Margin="33,3,23,3"
                                      VerticalAlignment="Center"
                                      HorizontalAlignment="Left"/>
                            <Popup Name="Popup"
                           Placement="Bottom"
                           IsOpen="{TemplateBinding IsDropDownOpen}"
                           AllowsTransparency="True"
                           Focusable="False"
                           PopupAnimation="Fade">
                                <Grid Name="DropDown"
                              SnapsToDevicePixels="True"
                              MinWidth="{TemplateBinding ActualWidth}"
                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder"
                                    Background="#E09C3F"
                                    BorderBrush="Black"
                                    BorderThickness="3"
                                    Height="Auto"
                                    CornerRadius="30" 
                                    Margin="0,20,0,20"/>
                                    <ScrollViewer Margin="33,50,33,50"
                                          SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True"
                                            KeyboardNavigation.DirectionalNavigation="Contained"/>
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Применение пользовательского стиля для всех ComboBox -->
        <Style TargetType="ComboBox" BasedOn="{StaticResource CustomComboBoxStyle}"/>

        <!-- Выбор сроков и календарь DatePicker -->
        <Style TargetType="DatePicker" x:Key="CustomDatePicker">
            <Setter Property="Width" Value="500"/>
            <Setter Property="Height" Value="70"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#E09C3F"/>
            <Setter Property="BorderBrush" Value="#E09C3F"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="Padding" Value="10"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="FontFamily" Value="Cygre Medium"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="DatePicker">
                        <Grid>
                            <Border Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="10"
                    Width="500"
                    Height="70">
                                <Grid>
                                    <TextBox x:Name="PART_TextBox"
                             Text="{Binding Path=SelectedDate, RelativeSource={RelativeSource TemplatedParent}, StringFormat='dd.MM.yyyy'}"
                             Foreground="White"
                             Background="Transparent"
                             FontFamily="{TemplateBinding FontFamily}"
                             FontSize="40"
                             Padding="10"
                             VerticalContentAlignment="Center"
                             IsReadOnly="True"
                             BorderThickness="0"/>
                                    <Button x:Name="PART_Button"
                            Width="30"
                            Height="30"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center"
                            Margin="5"
                            Background="Transparent"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="0">
                                        <Path Data="M0,0 L0,1 L1,1 L1,0 Z"
                              Stretch="Uniform"
                              Fill="{TemplateBinding Foreground}"
                              Width="12"
                              Height="12"/>
                                    </Button>
                                </Grid>
                            </Border>
                            <Popup x:Name="PART_Popup"
                   Placement="Bottom"
                   StaysOpen="False"
                   IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}">
                                <Border x:Name="PART_CalendarBorder"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="1"
                        Background="{TemplateBinding Background}">
                                    <Calendar x:Name="PART_Calendar"
                              IsTodayHighlighted="True"
                              Width="400"
                              Height="400"
                              SelectedDate="{Binding Path=SelectedDate, RelativeSource={RelativeSource TemplatedParent}}"/>
                                </Border>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="DatePicker.SelectedDate" Value="{x:Null}">
                                <Setter TargetName="PART_TextBox" Property="Text" Value="Выберите дату" />
                                <Setter TargetName="PART_TextBox" Property="Foreground" Value="#E09C3F" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Стили для кнопки добавления изображения -->
        <Style x:Key="AddImageButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="10"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="FontFamily" Value="Cygre Medium"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border"
                                Background="{TemplateBinding Background}"
                                CornerRadius="10"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#33FFFFFF"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>
</Application>
